"""add Foreign keys, Naming refact

Revision ID: 697e0a8c7e9a
Revises: 9bf193d8079a
Create Date: 2022-10-02 18:58:05.606895

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '697e0a8c7e9a'
down_revision = '9bf193d8079a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('project', 'name',
               existing_type=sa.VARCHAR(length=240),
               nullable=False)
    op.add_column('requirement', sa.Column('description', sa.Text(), nullable=True))
    op.alter_column('requirement', 'name',
               existing_type=sa.VARCHAR(length=240),
               nullable=False)
    op.create_foreign_key(None, 'requirement', 'requirement_tree', ['parent_id'], ['id'])
    op.create_foreign_key(None, 'requirement', 'project', ['project_id'], ['id'])
    op.drop_column('requirement', 'requirement')
    op.create_foreign_key(None, 'requirement_tree', 'project', ['project_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'requirement_tree', type_='foreignkey')
    op.add_column('requirement', sa.Column('requirement', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'requirement', type_='foreignkey')
    op.drop_constraint(None, 'requirement', type_='foreignkey')
    op.alter_column('requirement', 'name',
               existing_type=sa.VARCHAR(length=240),
               nullable=True)
    op.drop_column('requirement', 'description')
    op.alter_column('project', 'name',
               existing_type=sa.VARCHAR(length=240),
               nullable=True)
    # ### end Alembic commands ###
